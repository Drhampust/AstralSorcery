buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.+'
    }
}

apply plugin: 'net.minecraftforge.gradle.forge'
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'maven-publish'
apply plugin: "java"

version = "1.12.2-1.10.28-Uncapped"
group= "hellfirepvp.astralsorcery"
archivesBaseName = "astralsorcery"
String build_version = ""

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

minecraft {
    version = "1.12.2-14.23.5.2847"
    runDir = "run"
    useDepAts = true

    mappings = "snapshot_20180415"
}

repositories {

    maven {
        // JEI files
        // https when
        url = "http://dvs1.progwml6.com/files/maven"
    }

    maven {
        // CraftTweaker
        name 'jared maven'
        url "https://maven.blamejared.com/"
    }

    maven {
        //Baubles
        name 'thiakil'
        url 'https://maven.thiakil.com'
    }

    maven {
        // Gamestages stuff
        url 'https://maven.mcmoddev.com'
    }

    maven {
        // CTM
        url 'https://maven.tterrag.com'
    }

}

dependencies {

    deobfCompile ('mezz.jei:jei_1.12.2:4.8.5.151')
    //deobfCompile "mezz.jei:jei_1.12.2:4.8.5.151"

    deobfCompile ('CraftTweaker2:CraftTweaker2-MC1120-Main:1.12-4.1.8.9')
    //deobfCompile("CraftTweaker2:CraftTweaker2-MC1120-Main:1.12-4.1.8.9")

    deobfCompile ('team.chisel.ctm:CTM:MC1.12.2-0.3.3.22')
    //deobfCompile "team.chisel.ctm:CTM:MC1.12.2-0.3.3.22"

    deobfCompile ('com.azanor.baubles:Baubles:1.12-1.5.2')
    //deobfCompile "com.azanor.baubles:Baubles:1.12-1.5.2"

    deobfCompile ('net.darkhax.gamestages:GameStages-1.12.2:2.0.91')
    //deobfCompile "net.darkhax.gamestages:GameStages-1.12.2:2.0.91"

    deobfCompile ('net.darkhax.bookshelf:Bookshelf-1.12.2:2.3.543')
    //deobfCompile "net.darkhax.bookshelf:Bookshelf-1.12.2:2.3.543"

    /*
    compileOnly  fg.deobf("vazkii.botania:Botania:r1.10-363.148")
    compileOnly  fg.deobf("CraftTweaker2:CraftTweaker2-API:1.12-4.1.8.9")
    compileOnly  fg.deobf("CraftTweaker2:ZenScript:4.1.8.9")
    compileOnly fg.deobf("net.darkhax.orestages:OreStages-1.12.2:2.0.38")
    */

}

// Example for how to get properties into the manifest for reading by the runtime..
jar {
    manifest {
        attributes([
                "Specification-Title": "astralsorcery",
                "Specification-Vendor": "hellfirepvp",
                "Specification-Version": "1", // We are version 1 of ourselves
                "Implementation-Title": project.name,
                "Implementation-Version": "${version}",
                "Implementation-Vendor" :"hellfirepvp",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
        attributes 'FMLAT': 'astralsorcery_at.cfg'
        attributes 'FMLCorePlugin': "hellfirepvp.astralsorcery.core.AstralCore"
        attributes 'FMLCorePluginContainsFMLMod': true
    }
}

// sets project to use UTF-8 on compile
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

// Example configuration to allow publishing using the maven-publish task
// This is the preferred method to reobfuscate your jar file
jar.finalizedBy('reobfJar')
// However if you are in a multi-project build, dev time needs unobfed jar files, so you can delay the obfuscation until publishing by doing
//publish.dependsOn('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}
